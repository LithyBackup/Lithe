sudo: false
language: cpp
cache: ccache
matrix:
  include:
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libboost1.55-all-dev
        - g++-8
        - gcc-8
    env:
    - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"
    - LABEL="linux"
    - _DEPLOYABLE="true"
    - STRIP="strip"
  - os: linux
    compiler: gcc
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        packages:
        - libboost1.55-all-dev
        - g++-7
        - gcc-7
    env:
    - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
    - LABEL="linux-g++-7"
    - STRIP="strip"
  - os: linux
    compiler: clang
    addons:
      apt:
        sources:
        - ubuntu-toolchain-r-test
        - llvm-toolchain-trusty-6.0
        packages:
        - libboost1.55-all-dev
        - clang-6.0
        - libstdc++-7-dev
    env:
    - MATRIX_EVAL="CC=clang-6.0 && CXX=clang++-6.0"
    - LABEL="linux-clang-6"
    - STRIP="strip"
  - os: linux
    env:
    - MATRIX_EVAL="CC=aarch64-linux-gnu-gcc && CXX=aarch64-linux-gnu-g++"
    - LABEL="aarch64"
    - _DEPLOYABLE="true"
    - STRIP="aarch64-linux-gnu-strip"
before_install:
- eval $MATRIX_EVAL
install:

- if [[ "$LABEL" == "aarch64" ]]; then export BASEDIR=`pwd` ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $HOME ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/8.2-2018.08/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then wget http://sourceforge.net/projects/boost/files/boost/1.55.0/boost_1_55_0.tar.gz ; fi
- if [[ "$LABEL" == "aarch64" ]]; then mkdir toolchain && cd toolchain ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar xfv ../gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu.tar.xz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu ; fi
- if [[ "$LABEL" == "aarch64" ]]; then tar zxvf ../../boost_1_55_0.tar.gz >/dev/null ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd boost_1_55_0 ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./bootstrap.sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then curl https://raw.githubusercontent.com/CalexCore/AmityCoin/dev/scripts/fix_boost_aarch64.sh | sh ; fi
- if [[ "$LABEL" == "aarch64" ]]; then ./b2 toolset=gcc-aarch64 --with-system --with-filesystem --with-thread --with-date_time --with-chrono --with-regex --with-serialization --with-program_options >/dev/null; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_BOOST_ROOT="-DBOOST_ROOT=`pwd`" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export CUSTOM_TOOLCHAIN="-DCMAKE_TOOLCHAIN_FILE=../scripts/cross-aarch64.cmake" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then export STRIP="$HOME/toolchain/gcc-arm-8.2-2018.08-x86_64-aarch64-linux-gnu/bin/aarch64-linux-gnu-strip" ; fi
- if [[ "$LABEL" == "aarch64" ]]; then cd $BASEDIR ; fi

script:
- eval $MATRIX_EVAL
- mkdir build && cd build
- cmake -DCMAKE_BUILD_TYPE=Release -DSTATIC=true .. ${CUSTOM_TOOLCHAIN} ${CUSTOM_BOOST_ROOT}
  ${ADDITIONAL_CMAKE_ARGS}
- make -j2
before_deploy:
- if [[ "${TRAVIS_TAG}" == "" ]]; then export TRAVIS_TAG=${TRAVIS_COMMIT} ; fi
- cd src
- TARGETS="Lithed miner zedwallet lithe-service zedwallet-beta cryptotest wallet-api"
- "${STRIP} ${TARGETS}"
- rm -rf lithe-${TRAVIS_TAG}
- mkdir lithe-${TRAVIS_TAG}
- cp ${TARGETS} lithe-${TRAVIS_TAG}/
- cp ../../LICENSE lithe-${TRAVIS_TAG}/
- tar cvfz lithe-${TRAVIS_TAG}-${LABEL}.tar.gz lithe-${TRAVIS_TAG}/
- rm -rf builds
- mkdir builds
- cp lithe-${TRAVIS_TAG}-${LABEL}.tar.gz builds
- cd ..
deploy:
  provider: s3
  access_key_id:
    secure: s+Nr6PDAaUxULTQmycgpm3SIbQBN+KemAq+w4+DbVmjyAcdssf5hVPM4lo2q3t564LCLjlHA/swhEjXbj7i+S07O33uqkz4kZxDJRcll5QlMTDpDb/tTwacS01+r96prYbx4ULN6H1uDJvNTfcurmQGLhiucWrXgseJScipjDdP/uF7DsElL4U8A+RwxEmtg4S60qpVBhyypGz4xDcYw1Hyv1rwaKPyP5y8YyRsFa8K3OLacGCkItq0hu9vWc8CHyYQzX3czcj9ROvSs80uvBzOQOhS17xQ3Z6weAKWEec9J4BjnoArWpycUa7d7TEF8D/gK0ER2XcN/Fq7yT1FsbIk5NR6SDYBvWNOCkE96aJUcvU+NSLyCc/RLfwv/dkC4mB8hzHpaR0GDRBkLe/JzJS0hJtqPcv1l2troz5JQ2yAxWq2+li5FKyFPnFi/Z0Iqz7ppDd7E2ne+o64NT8Mo0szEBLYkro5MM5rCaT36LbXDVXs1+Mtz1YNSiUbUOgj0Rvee0F5Siamh8QaUP1A4oDyhp55DaIHpXvSlIp2w16cjVNt+yJZXKfFXT8fMKkzbVhWau5MzD+V9QIZ/0hkXHNkHZtiTYlzBELJq29hPEJJ8mgKIIjwdRHpSfqzZJHCtENMR/C5kjJqc30km70pAhmS4K5DW9X4lLCUZ4c01s7I=
  secret_access_key:
    secure: Z/y5uYWmw+RozKpOgZCzgS/0xv5UGWWZHImrpbnvid+QLZoyFGE7YWwMsXBjbNpZL0L0mPKebyJQz6T2xj+UU7TJlhv5Ur0hnDJxRADbPDISeWMTC4ejNN5DUxGYtNm2R+hLXLeQJZ7BXyyr84p4XEWUKFqjNvgKmr5avBsOElMKs0/V8nABD1Hzj/UpnF5Q/sD6AVhoVEjVhqZPpKRsz6RGQfEcW5EBsyFHUNYLWYC92baz2Dos9/if2Fc4yJBvBGxheFRTF2c85yE90sEqYlBJUIrL/JgBjWm1+jhKPNgZ47gwnnxbKjb6cMAM3qm5SyQcRo91U/fsL3pRDQa8zwTDQm4G4JYO2LkEfook2tUtlWLUhOl59owYwoJjM1kp9QAoX0Dr1cVv2IEZHDlMHW8i6hVPI4i/vGMEQCjx03j6wIk31n0ZkhjOUAoz3UEMLnsR33QuIbkPjL5UoBZSF5aqNM5oV9tN0FkyLrZOjIKV7G8F922iuVXkfFf/LJIN7d3ZoJdE0VcDK+sEzmTCuPQO1Xk6agZNunr2UiX3XjUNv/cQK+sKnEX/XftuQLS/yuQqwAokdwBD9Bf0aW06UW9pJ9oFkeoVD31f8f50egMUy4UdM9e7AJ52+EjyZwV9YUCGTZiuLBmMNTl8ig48FLS2RrddFZAZCO/Y77dMwc8=
  bucket: lithe-project
  skip_cleanup: true
  acl: public_read
  local-dir: src/builds
  on:
    repo: Lithe-Project/Lithe
    branch: master
env:
  global:
  - secure: i7PfNeR+WqGAaAPTW4HzkSatJMdcbyBOEQkUPQjrBBtKawOTlLxFsdSNAYb1Kr6hRx0bSD1dN33rq3HXbGjz8Va3ezvA9VwrgKnSH2KpgA8PnpUHeuJBFyDtD93BSiC9kCNxs5D/7gMlHUgjKhBPe/NXc8v2MNF4bD4jXtgQn2VGR/5Ay5cIm0e8M7vy68I9Ta+bXPHxQYLchidpxVT3HBxRCvumdfcfeSYMXRaLdTTobHK5WA44OZR6zUWn84u+DaChgvhCoZTq+rY6hpoTsvuXeroxieZHANXIHR/XDkbDYfMT9oIvxbPV4hx6bBL13MQs41D9qMQCMhCwgKXPbe0+q1WxP7CAPAEthRG5FkvYII16QZmkWLg6jDkmUM2QJyu/LhyvQNYhWIWEkzh/uO5JMczmrtkFmNKCXKGVPdbiNImbzvhEGoWxKC2nNLCfMF3wjJpmQHyCyZ7aH3HXCS5kaQsis9FffrFTS+tjZeY5ovpBB2Bj8GC0K/78BamyTJ8ZQ9NGJ+I1tsI3+4NFRWRY+U9aTPFTzCggLkDxkAUrMoqI4F9OXWFu6Gd0MnXgCUrwHwCp+kTHFuMTllZpO8JCXoQlbt0xlPq6L6Fm/Vu/vOEqA7xKHCpfigoof4ysrJxex+7br7bdUXTrGGIQr4dSRhPjqQc/AWeJFUYau8g=
  - secure: jXrzv/KSPSOwjA9phe9St28rkxfZO1j29tLz3jP1B38FVlDtzIhElr2/cqBoYNbHFF7uImqB2aA+7qhUluZVmAW9rAGhDGGNY0CUPFjIZtQpjAYPYXUoTd2V8oUq/XlW133FafHC83mlVGM6gEzFC8t+GZXZFUgMGiDS8rWKPwASgrAthGAUR08tVoXFFdOLnEa9i/PInd+jIybI7JRehM1TaWCncogoCmBm8H5rQk7FRZAmAaeO5WermR8qHgPjuEPnnYjoEArpUcSB5J1QTQ0U8wp6SB1qm2DPxJ1DamZzNmO5D8vK0xaQZGfu3M47Wf70I3wL3Vm+2GwrYY6kmOTE5Ls7k4QzDq0N3VyvtLkXDB7oN5zO9X98N4515veMkpfnRQWWAVvjTLRfZBQl22mgXKI5AjbEiYmuOMk1BOxSLNvlSj3VWedsnW+OTVH39NzjRukyTiTjWuSMlY/2bYwkxIiglssZQ6fmR781Uft0c0ZYzoiXUzg3ozG0pBGs0HkSC0jbF+p7zwUBgObTy2REMOe1eLEhevJaZbROWuu82wussmJjf1S8R3Ck15gvW8NYMwfgfut5D7CTChYE1ICim9mkL7oSqWYLX4m9rc01qSP1vpiurbPExRZaR1qOFa5zJRMkwaUq4w7qEsCLM4gBFuYe/Ygwa10A1Upe8to=
  
